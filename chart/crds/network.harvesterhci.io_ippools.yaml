---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    {}
  name: ippools.network.harvesterhci.io
spec:
  group: network.harvesterhci.io
  names:
    kind: IPPool
    listKind: IPPoolList
    plural: ippools
    shortNames:
    - ippl
    - ippls
    singular: ippool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.networkName
      name: NETWORK
      type: string
    - jsonPath: .status.ipv4.available
      name: AVAILABLE
      type: integer
    - jsonPath: .status.ipv4.used
      name: USED
      type: integer
    - jsonPath: .status.conditions[?(@.type=='Registered')].status
      name: REGISTERED
      type: string
    - jsonPath: .status.conditions[?(@.type=='CacheReady')].status
      name: CACHEREADY
      type: string
    - jsonPath: .status.conditions[?(@.type=='AgentReady')].status
      name: AGENTREADY
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              ipv4Config:
                properties:
                  cidr:
                    type: string
                    x-kubernetes-validations:
                    - message: CIDR is immutable
                      rule: self == oldSelf
                  dns:
                    format: ipv4
                    items:
                      type: string
                    maxItems: 3
                    type: array
                  domainName:
                    type: string
                  domainSearch:
                    items:
                      type: string
                    type: array
                  leaseTime:
                    type: integer
                  ntp:
                    items:
                      type: string
                    maxItems: 4
                    type: array
                  pool:
                    properties:
                      end:
                        format: ipv4
                        type: string
                        x-kubernetes-validations:
                        - message: End is immutable
                          rule: self == oldSelf
                      exclude:
                        format: ipv4
                        items:
                          type: string
                        type: array
                        x-kubernetes-validations:
                        - message: Exclude is immutable
                          rule: self == oldSelf
                      start:
                        format: ipv4
                        type: string
                        x-kubernetes-validations:
                        - message: Start is immutable
                          rule: self == oldSelf
                    required:
                    - end
                    - start
                    type: object
                    x-kubernetes-validations:
                    - message: End is required once set
                      rule: '!has(oldSelf.exclude) || has(self.exclude)'
                  router:
                    format: ipv4
                    type: string
                    x-kubernetes-validations:
                    - message: Router is immutable
                      rule: self == oldSelf
                  serverIP:
                    format: ipv4
                    type: string
                    x-kubernetes-validations:
                    - message: ServerIP is immutable
                      rule: self == oldSelf
                required:
                - cidr
                - pool
                - serverIP
                type: object
                x-kubernetes-validations:
                - message: Router is required once set
                  rule: '!has(oldSelf.router) || has(self.router)'
              networkName:
                maxLength: 64
                type: string
                x-kubernetes-validations:
                - message: NetworkName is immutable
                  rule: self == oldSelf
              paused:
                type: boolean
            required:
            - networkName
            type: object
          status:
            properties:
              agentPodRef:
                properties:
                  image:
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                  uid:
                    description: |-
                      UID is a type that holds unique ID values, including UUIDs.  Because we
                      don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                      intent and helps make sure that UIDs and names do not get conflated.
                    type: string
                type: object
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of cluster condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              ipv4:
                properties:
                  allocated:
                    additionalProperties:
                      type: string
                    type: object
                  available:
                    type: integer
                  used:
                    type: integer
                required:
                - available
                - used
                type: object
              lastUpdate:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
